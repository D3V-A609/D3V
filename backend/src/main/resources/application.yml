spring:
  profiles:
    active: dev
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 50MB
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true
        debug: true
cloud:
  aws:
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KEY}
    s3:
      bucket-name: ${BUCKET}
    region:
      static: ${REGION}
    stack:
      auto: false
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web.cors: DEBUG
    org.hibernate: INFO

server:
  forward-headers-strategy: framework

---

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://${DEV_DATABASE_HOST}:5432/d3vdb #jdbc:postgresql://localhost:5432/postgres
    driver-class-name: org.postgresql.Driver
    username: ${DEV_DATABASE_USER}
    password: ${DEV_DATABASE_PASSWORD}
  jpa:
    properties:
      hibernate:
        default_batch_fetch_size: 1000
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    hibernate:
      ddl-auto: update
    show-sql: true
  data:
    redis:
      host: 52.78.105.9
      port: 6379

  # Security OAuth
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENTID}
            clientSecret: ${GOOGLE_CLIENTSECRET}
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            scope: profile, email
          naver:
            clientId: ${NAVER_CLIENTID}
            clientSecret: ${NAVER_CLIENTSECRET}
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
          kakao:
            clientId: ${KAKAO_CLIENTID}
            clientSecret: ${KAKAO_CLIENTSECRET}
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-name: Kakao
            client-authentication-method: client_secret_post
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
jwt:
  secret: ${JWT_SECRET_KEY}

app:
  oauth2:
    authorizedRedirectUris: http://localhost:5173/oauth/redirect
